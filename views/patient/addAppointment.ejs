<%- include('../partials/header', { title: 'Add Appointment', stylesheetName:
'styles', headerTitle: 'Add Appointment' }) %> <%-
include('../partials/patientNav') %>
<form action="/book-appointment" method="POST" class="appointment-form">
  <div class="appointment-container">
    <select
      id="Specialty"
      name="Specialty"
      class="dropdown"
      required
      style="width: 100%"
    >
      <option value="Choose Specialty" disabled selected>
        Choose Specialty
      </option>
      <% specialties.forEach(specialty => { %>
      <option value="<%= specialty %>"><%= specialty %></option>
      <% }) %>
    </select>

    <input
      type="text"
      id="Appointment_Date"
      name="Appointment_Date"
      class="dropdown"
      placeholder="Choose a date"
      required
      autocomplete="off"
    />
    <input type="hidden" id="selected-doctor-id" name="Doctor_ID" />
    <input type="hidden" id="selected-Room-id" name="Room_ID" />
    <input type="hidden" id="patient-id" name="Patient_ID" value="<%= user.User_ID %>" />
    <input type="hidden" id="Amount" name="Amount"/>

    <select id="Appointment_Time" name="Appointment_Time" class="dropdown" required>
      <option value="" disabled selected>Select time</option>
    </select>

    
    <div class="custom-dropdown">
      <div class="dropdown-header">Choose doctor</div>
      <div class="dropdown-content" id="doctor-dropdown">
      </div>
    </div>
    <p id="doctor-amount"></p>

    <button type="submit" id="book-appointment" class="book-appointment-btn">
      Book Appointment
      <span>
        <i class="fa-regular fa-square-plus" style="color: #ffffff"></i>
      </span>
    </button>
  </div>
</form>
<% if (typeof alertMessage !== 'undefined' && alertMessage) { %>
  <div class="alert <%= alertType %>">
    <%= alertMessage %>
  </div>
<% } %>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<script>
$(document).ready(function () {
  let bookedAppointments = []; 

  $("#Specialty").on("change", function () {
    const selectedSpecialty = $(this).val();
    fetch("/availability/days?specialty=" + selectedSpecialty)
      .then((response) => response.json())
      .then((data) => {
        if (Array.isArray(data)) {
          const availableDates = data.flatMap((day) => getWeekdaysForTwoMonths(day));

          flatpickr("#Appointment_Date", {
            dateFormat: "Y-m-d", 
            minDate: "today", 
            mintime: "7:00",
            disableMobile: true, 
            allowInput: true, 
            enable: availableDates.map((date) => new Date(date)), 
            onDayCreate: function (dObj, dStr, fp, dayElem) {
              const date = fp.formatDate(dayElem.dateObj, "Y-m-d");
              if (availableDates.includes(date)) {
                dayElem.classList.add("available"); 
              } else {
                dayElem.classList.add("unavailable");
              }
            },
          });
        } else {
          console.error("Invalid data format returned from server:", data);
        }
      })
      .catch((err) => {
        console.error("Error fetching days:", err);
      });
  });

  function getWeekdaysForTwoMonths(weekday) {
    const today = new Date();
    const daysOfWeek = {
      Sunday: 0,
      Monday: 1,
      Tuesday: 2,
      Wednesday: 3,
      Thursday: 4,
      Friday: 5,
      Saturday: 6,
    };
    if (!(weekday in daysOfWeek)) {
      console.error(`Invalid weekday: ${weekday}`);
      return [];
    }

    const targetDay = daysOfWeek[weekday];
    const dates = [];
    const twoMonthsFromToday = new Date();
    twoMonthsFromToday.setMonth(today.getMonth() + 1);

    let currentDate = new Date(today);

    while (currentDate <= twoMonthsFromToday) {
      const currentDay = currentDate.getDay();
      if (currentDay === targetDay) {
        dates.push(currentDate.toISOString().split("T")[0]);
      }
      currentDate.setDate(currentDate.getDate() + 1);
    }

    return dates;
  }

  // Handle date change
  $("#Appointment_Date").on("change", function () {
    const selectedDate = $(this).val();
    const selectedSpecialty = $("#Specialty").val();

    if (selectedSpecialty && selectedDate) {
      const timesDropdown = document.getElementById("Appointment_Time");
      timesDropdown.innerHTML =
        '<option value="" disabled selected>Select time</option>';

      const dateObj = new Date(selectedDate);
      const daysOfWeek = [
        "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"
      ];
      const dayName = daysOfWeek[dateObj.getUTCDay()];

      fetch(`/availability/times?specialty=${selectedSpecialty}&day=${dayName}`)
        .then((response) => response.json())
        .then((data) => {
          // Filter out times that are already booked
          const availableTimes = data.filter(time => 
            !bookedAppointments.some(appointment => 
              appointment.date === selectedDate && appointment.time === time
            )
          );

          availableTimes.forEach((time) => {
            const option = document.createElement("option");
            option.value = `${selectedDate} ${time}`;
            option.textContent = time;
            timesDropdown.appendChild(option);
          });
        })
        .catch((err) => console.error("Error fetching times:", err));
    }
  });

  // Handle doctor selection
  const doctorDropdown = document.getElementById("doctor-dropdown");
  const dropdownHeader = document.querySelector(".dropdown-header");

  function toggleDropdown() {
    doctorDropdown.style.display = doctorDropdown.style.display === "block" ? "none" : "block";
  }

  window.selectDoctor = function (doctorName) {
    dropdownHeader.textContent = doctorName;
    doctorDropdown.style.display = "none"; 
  };

  window.checkProfile = function (doctorName) {
    alert(`Checking profile for ${doctorName}`);
  };

  window.addEventListener("click", (e) => {
    if (!e.target.closest(".custom-dropdown")) {
      doctorDropdown.style.display = "none";
    }
  });

  dropdownHeader.addEventListener("click", toggleDropdown);

  $("#Appointment_Time").on("change", function () {
    const selectedSpecialty = $("#Specialty").val();
    const selectedDate = $("#Appointment_Date").val();
    const selectedTime = $("#Appointment_Time").val();
    const timeOnly = selectedTime.split(" ")[1] + " " + selectedTime.split(" ")[2];

    if (selectedSpecialty && selectedDate && selectedTime) {
      const dateObj = new Date(selectedDate);
      const daysOfWeek = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
      const dayName = daysOfWeek[dateObj.getUTCDay()];

      fetch(`/doctors/availability?specialty=${selectedSpecialty}&day=${dayName}&time=${timeOnly}`)
        .then((response) => response.json())
        .then((data) => {
          doctorDropdown.innerHTML = ""; // Clear previous doctor options

          if (data.length === 0) {
            const noDoctors = document.createElement("div");
            noDoctors.classList.add("dropdown-item");
            noDoctors.textContent = "No doctors available.";
            doctorDropdown.appendChild(noDoctors);
          } else {
            data.forEach((doctor) => {
              const doctorOption = document.createElement("div");
              doctorOption.classList.add("doctor-option");

              const doctorName = document.createElement("span");
              doctorName.classList.add("doctor-name");
              doctorName.textContent = `${doctor.FName} ${doctor.LName}`;

              const checkAccountButton = document.createElement("button");
              checkAccountButton.classList.add("check-account");
              checkAccountButton.textContent = "Check account";
              checkAccountButton.type = "button"; 
              checkAccountButton.onclick = function (event) {
                event.preventDefault(); 
                const doctorID = doctor.Doctor_ID;
                window.location.href = `/doctor-profile-${doctorID}`;
              };

              doctorOption.appendChild(doctorName);
              doctorOption.appendChild(checkAccountButton);
              doctorOption.onclick = function () {
                selectDoctor(`${doctor.FName} ${doctor.LName}`);
                document.getElementById("selected-doctor-id").value = doctor.Doctor_ID;
                document.getElementById("selected-Room-id").value = doctor.Room_ID;
                document.getElementById("Amount").value = doctor.Amount_P;
                const amountParagraph = document.getElementById("doctor-amount");
                amountParagraph.textContent = `Amount: $${doctor.Amount_P}`;
              };

              doctorDropdown.appendChild(doctorOption);
            });
          }
        })
        .catch((err) => {
          console.error("Error fetching doctors:", err);
          doctorDropdown.innerHTML = ""; 
          const errorItem = document.createElement("div");
          errorItem.classList.add("dropdown-item");
          errorItem.textContent = "Error fetching doctors.";
          doctorDropdown.appendChild(errorItem);
        });
    }
  });

  // Handle booking appointment
  $("#book-appointment-btn").on("click", function () {
    const selectedDate = $("#Appointment_Date").val();
    const selectedTime = $("#Appointment_Time").val();
    const selectedDoctor = $("#doctor-dropdown").find(".doctor-name").text();

    if (selectedDate && selectedTime && selectedDoctor) {
      // Add the appointment to the booked appointments list
      bookedAppointments.push({
        date: selectedDate,
        time: selectedTime,
        doctor: selectedDoctor,
      });

      alert("Appointment successfully booked!");
    } else {
      alert("Please select all fields before booking.");
    }
  });
});
</script>
<script src="js/main.js"></script>
<%- include('../partials/footer') %>
